name: Ronin Frontend CI/CD

on:
  push:
    branches:
      - main

env:
  FRONTEND_REPO: ronin-frontend
  DOCKERHUB_USERNAME: yehorzudikhin

jobs:
  setup:
    name: Setup frontend pipeline environment
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 23
          cache: "npm"
          cache-dependency-path: ronin-frontend/package-lock.json

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ronin-frontend/node_modules
          key: npm-${{ runner.os }}-${{ hashFiles('ronin-frontend/package-lock.json') }}
          restore-keys: |
            npm-${{ runner.os }}-

      - name: Install Dependencies
        working-directory: ronin-frontend
        run: npm install

  sast:
    name: SonarQube Analysis
    runs-on: ubuntu-24.04
    needs: setup
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: ronin-frontend
          args: >
            -Dsonar.sources=src
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORG }}

  sca:
    name: Snyk Security Scan
    runs-on: ubuntu-24.04
    needs: setup
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Restore npm dependencies
        uses: actions/cache@v4
        with:
          path: ronin-frontend/node_modules
          key: npm-${{ runner.os }}-${{ hashFiles('ronin-frontend/package-lock.json') }}
          restore-keys: |
            npm-${{ runner.os }}-

      - name: Install Dependencies
        working-directory: ronin-frontend
        run: npm install

      - name: Snyk Security Scan
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --file=ronin-frontend/package.json

  deliver:
    name: Build & Deploy to Docker Hub
    runs-on: ubuntu-24.04
    needs: [setup, sast, sca]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker Image
        run: |
          docker buildx build --platform linux/amd64 -t ${{ env.DOCKERHUB_USERNAME }}/${{ env.FRONTEND_REPO }}:${{ github.sha }} ronin-frontend

      - name: Push to Docker Hub
        run: |
          docker push ${{ env.DOCKERHUB_USERNAME }}/${{ env.FRONTEND_REPO }}:${{ github.sha }}

  deploy:
    name: Deploy to EKS through GitOps trigger
    runs-on: ubuntu-24.04
    needs: [deliver]
    steps:
      - name: GitOps - Update Image Tag
        uses: adwert-it/gitops-image-update@v1
        with:
          REPOSITORY_NAME: "GeorgeZudikhin/ronin-infra"
          ACCESS_TOKEN: ${{ secrets.INFRA_REPO_ACCESS_TOKEN }}
          BRANCH: "main"
          VALUES_FILE_PATH: "k8s/charts/ronin-frontend/values.yaml"
          VALUE_NAME: "image.tag"
          TAG: "${{ github.sha }}"
