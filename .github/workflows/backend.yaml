name: Ronin Backend CI/CD

on:
  push:
    branches:
      - main

env:
  BACKEND_REPO: ronin-backend
  DOCKERHUB_USERNAME: yehorzudikhin

jobs:
  setup:
    name: Setup backend pipeline environment
    runs-on: ubuntu-24.04
    defaults:
      run:
        working-directory: ronin-backend
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Cache Maven Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: maven-${{ runner.os }}-${{ hashFiles('ronin-backend/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-

      - name: Install Dependencies
        working-directory: ronin-backend
        run: mvn dependency:resolve

  build:
    name: Build Backend App
    runs-on: ubuntu-24.04
    needs: setup
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"

      - name: Build with Maven
        working-directory: ronin-backend
        run: mvn clean package -DskipTests

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ronin-backend-jar
          path: ronin-backend/target/*.jar

  sast:
    name: SonarQube Analysis
    runs-on: ubuntu-24.04
    needs: setup
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "21"
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: SonarQube Scan
        working-directory: ronin-backend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B verify -DskipTests \
            org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.organization=${{ secrets.SONAR_ORG }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dspring.profiles.active=sonar

  sca:
    name: Snyk Security Scan
    runs-on: ubuntu-24.04
    needs: setup
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Snyk Security Scan
        uses: snyk/actions/maven@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --file=ronin-backend/pom.xml

  deliver:
    name: Build & Deploy to Docker Hub
    runs-on: ubuntu-24.04
    needs: [build, sast, sca]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: ronin-backend-jar
          path: ronin-backend/target

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker Image
        run: |
          docker buildx build --platform linux/amd64 -t ${{ env.DOCKERHUB_USERNAME }}/${{ env.BACKEND_REPO }}:${{ github.sha }} ronin-backend

      - name: Push to Docker Hub
        run: |
          docker push ${{ env.DOCKERHUB_USERNAME }}/${{ env.BACKEND_REPO }}:${{ github.sha }}

  deploy:
    name: Deploy to EKS through GitOps trigger
    runs-on: ubuntu-24.04
    needs: [deliver]
    steps:
      - name: Setup yq
        uses: dcarbone/install-yq-action@v1

      - name: Checkout Infra Repo
        uses: actions/checkout@v4
        with:
          repository: GeorgeZudikhin/ronin-infra
          token: ${{ secrets.INFRA_REPO_ACCESS_TOKEN }}
          path: ronin-infra

      - name: Update image tag in values.yaml
        run: |
          cd ronin-infra/k8s/charts/ronin-backend
          yq -i ".image.tag = \"$GITHUB_SHA\"" values.yaml

      - name: Commit and push updated tag
        run: |
          cd ronin-infra
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add .
          git commit -m "ci: update backend image tag to $GITHUB_SHA"
          git push origin main
